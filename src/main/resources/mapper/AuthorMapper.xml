<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.worker.dao.AuthorMapper">

    <!--封装 查询的Author带 entry-->
    <resultMap id="AuthorWithEntry" type="Author">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="des" property="des"/>
        <result column="src" property="src"/>
        <association property="entry" select="com.worker.dao.AuthorMapper.getEntryByName" column="name">
        </association>
    </resultMap>
    <!--Entry getEntryByName(@Param("name") String name);-->
    <select id="getEntryByName" resultType="Entry">
        match (d:Details) where d.name = #{name} return d.name as name, d.styleName as styleName,
        d.pseudonym as pseudonym, d.country as country, d.nation as nation,
        d.ancestralHome as ancestralHome, d.birthplace as birthplace, d.birthData as birthData,
        d.deadData as deadData, d.occupation as occupation, d.sex as sex, d.paintings as paintings,
        d.graduateSchool as graduateSchool, d.achievements as achievements;
    </select>

    <!--List<Painter> getAll();-->
    <select id="getAll" resultMap="AuthorWithEntry">
        match (a:Authors) return id(a) as id,a.des as des,a.name as name,a.src as src;
    </select>
    <!--Painter getPainterByName(@Param("name") String name);-->
    <select id="getAuthorByName" resultMap="AuthorWithEntry">
        match (a:Authors) where a.name = #{name} return id(a) as id,a.des as des,a.name as name,a.src as src;
    </select>

    <!--List<Author> getLikelyAuthors(@Param("name") String name);-->
    <select id="getLikelyAuthors" resultMap="AuthorWithEntry">
        match (a:Authors) where a.name contains #{name} return id(a) as id,a.des as des,a.name as name,a.src as src
    </select>

    <!--List<String> getLikelyAuthorOnlyName(@Param("name")String name);-->
    <select id="getLikelyAuthorOnlyName" resultType="string">
        match (a:Authors) where a.name contains #{name} return a.name as name;
    </select>
</mapper>
